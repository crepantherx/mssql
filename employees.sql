-- Creating tables...
CREATE TABLE ADDRESS
(
    ADDRESS_ID       VARCHAR(20) PRIMARY KEY
  , STREET           VARCHAR(250)
  , CITY             VARCHAR(100)
  , STATE            VARCHAR(100)
  , COUNTRY          VARCHAR(100)
);

create table kuch_bhi (name, age, gender, class)



CREATE TABLE IF NOT EXISTS SCHOOL
(
    SCHOOL_ID         VARCHAR(20) PRIMARY KEY
  , SCHOOL_NAME       VARCHAR(100) NOT NULL
  , EDUCATION_BOARD   VARCHAR(80)
  , ADDRESS_ID        VARCHAR(20)
  , CONSTRAINT FK_SCHOOL_ADDR FOREIGN KEY(ADDRESS_ID) REFERENCES ADDRESS(ADDRESS_ID)
);

CREATE TABLE IF NOT EXISTS STAFF
(
    STAFF_ID         VARCHAR(20) PRIMAR
  , STAFF_TYPE       VARCHAR(30)
  , SCHOOL_ID        VARCHAR(20)
  , FIRST_NAME       VARCHAR(100) NOT NULL
  , LAST_NAME        VARCHAR(100) NOT NULL
  , AGE              INT
  , DOB              DATE
  , GENDER           VARCHAR(10) CHECK (GENDER IN ('M', 'F', 'Male', 'Female'))
  , JOIN_DATE        DATE
  , ADDRESS_ID       VARCHAR(20)
  , CONSTRAINT PK_STAFF PRIMARY KEY(STAFF_ID)
  , CONSTRAINT FK_STAFF_SCHL FOREIGN KEY(SCHOOL_ID) REFERENCES SCHOOL(SCHOOL_ID)
  , CONSTRAINT FK_STAFF_ADDR FOREIGN KEY(ADDRESS_ID) REFERENCES ADDRESS(ADDRESS_ID)
);

CREATE TABLE IF NOT EXISTS STAFF_SALARY
(
    STAFF_ID         VARCHAR(20) PRIMARY KEY
  , SALARY           FLOAT
  , CURRENCY         VARCHAR(5)
);

CREATE TABLE IF NOT EXISTS SUBJECTS
(
    SUBJECT_ID       VARCHAR(20) PRIMARY KEY
  , SUBJECT_NAME     VARCHAR(50) NOT NULL
);

CREATE TABLE IF NOT EXISTS CLASSES
(
    CLASS_ID         VARCHAR(20)
  , CLASS_NAME       VARCHAR(50) NOT NULL
  , SUBJECT_ID       VARCHAR(20)
  , TEACHER_ID       VARCHAR(20)
  , CONSTRAINT FK_STAFF_SUBJ FOREIGN KEY(SUBJECT_ID) REFERENCES SUBJECTS(SUBJECT_ID)
  , CONSTRAINT FK_STAFF_STFF FOREIGN KEY(TEACHER_ID) REFERENCES STAFF(STAFF_ID)
  , CONSTRAINT PK_CLASSES PRIMARY KEY (CLASS_ID, CLASS_NAME, SUBJECT_ID)
);

CREATE TABLE IF NOT EXISTS STUDENTS
(
    ID               VARCHAR(20) PRIMARY KEY
  , FIRST_NAME       VARCHAR(100) NOT NULL
  , LAST_NAME        VARCHAR(100) NOT NULL
  , GENDER           VARCHAR(10) CHECK (GENDER IN ('M', 'F', 'Male', 'Female'))
  , AGE              INT
  , DOB              DATE
  --, GRADE            FLOAT
  --, IS_ACTIVE        BOOLEAN
  , CONSTRAINT CH_STUDENTS_AGE CHECK (AGE > 0)
);
/*
ALTER TABLE STUDENTS DROP COLUMN GRADE;
ALTER TABLE STUDENTS ALTER COLUMN IS_ACTIVE TYPE VARCHAR(1);
ALTER TABLE STUDENTS RENAME TO STUDENTS123;
ALTER TABLE STUDENTS123 RENAME COLUMN IS_ACTIVE TO ACTIVE;
ALTER TABLE STUDENTS123 RENAME TO STUDENTS;
ALTER TABLE STUDENTS DROP COLUMN ACTIVE;
*/

CREATE TABLE IF NOT EXISTS STUDENT_CLASSES
(
    STUDENT_ID       VARCHAR(20)
  , CLASS_ID         VARCHAR(20)
  , CONSTRAINT UNQ_STDCLASS UNIQUE (STUDENT_ID, CLASS_ID)
  , FOREIGN KEY(STUDENT_ID) REFERENCES STUDENTS(ID)
);

CREATE TABLE IF NOT EXISTS PARENTS
(
    ID               VARCHAR(20) PRIMARY KEY
  , FIRST_NAME       VARCHAR(100) NOT NULL
  , LAST_NAME        VARCHAR(100) NOT NULL
  , GENDER           VARCHAR(10)
  , ADDRESS_ID       VARCHAR(20)
  , CONSTRAINT CH_PARENTS CHECK (GENDER IN ('M', 'F', 'Male', 'Female'))
  , CONSTRAINT FK_PARENTS_ADDR FOREIGN KEY(ADDRESS_ID) REFERENCES ADDRESS(ADDRESS_ID)
);

CREATE TABLE IF NOT EXISTS STUDENT_PARENT
(
    STUDENT_ID       VARCHAR(20)
  , PARENT_ID        VARCHAR(20)
  , CONSTRAINT UNQ_STDPARENT UNIQUE (STUDENT_ID, PARENT_ID)
  , FOREIGN KEY(STUDENT_ID) REFERENCES STUDENTS(ID)
  , FOREIGN KEY(PARENT_ID) REFERENCES PARENTS(ID)
);